FORMAT: 1A

HOST:  http://api-testing-mealee.layorz.com/

# Order Taking System


Note : Refer to the url in the production for our purpose

Order Taking System used to sync orders between various phones

## Auth API [/api]

### Login API [POST /api/login]

Send a login request to the server with the credentials

+ Attributes
   + email (string, required) - Input should be of Email format. 
   + password (string, required) - Password should be greater than 8 characters. 


+ Request (application/json)

    + Headers

            X-Requested-With: XMLHttpRequest
            
    
    + Body 

                {
                    "email" : "test@gmail.com",
                    "password" : "12345678"
                }

+ Response 200

            {
                "access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9hcGktdGVzdGluZy1tZWFsZWUubGF5b3J6LmNvbVwvXC9hcGlcL2xvZ2luIiwiaWF0IjoxNTg0NzgzOTI3LCJleHAiOjE1ODQ3OTgzMjcsIm5iZiI6MTU4NDc4MzkyNywianRpIjoiRkhhS0VNTVVxTUhSc2VudyIsInN1YiI6NywicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.06kAL_o3zBEBI3Xj54FZztkxgE7O1hYqdvIRgKR1bEc",
                "token_type":"bearer",
                "expires_in":14400,
                "roles":[
                    "admin",
                    "branch_admin"
                ],
                "permissions":[
                    "view_menu",
                    "view_menu",
                    "create_menu",
                    "create_menu",
                    "update_menu",
                    "update_menu",
                    "delete_menu",
                    "delete_menu",
                    "create_pending_order",
                    "create_pending_order",
                    "update_pending_order",
                    "update_pending_order",
                    "delete_pending_order",
                    "delete_pending_order",
                    "create_order",
                    "create_order",
                    "update_order",
                    "delete_order",
                    "generate_sales_report",
                    "generate_sales_report",
                    "view_order",
                    "view_order"
                ],
                "name":"Test",
                "bill_slug":"TE",
                "company":{
                    "name":"TEst",
                    "address1":"Test",
                    "address2":"Test",
                    "city":"Ariyalur",
                    "state":"TamilNadu",
                    "country":"India",
                    "phone_no":"9090909090"
                },
                "branch":{
                    "name":"TEst",
                    "address1":"Test",
                    "address2":"Test",
                    "city":"Ariyalur",
                    "state":"TamilNadu",
                    "country":"India",
                    "phone_no":"9090909090"
                }
            }

+ Response 419 (application/json)

        {  
            "message":"Credentials are invalid"

        }

+ Response 422 (application/json)

        {  
            "message":"The given data was invalid.",
            "errors": {  
                "email": [  
                    "The email must be a valid email address."
                ],
                "password": [   
                    "The password must be at least 8 characters."
                ]
            }
        }
        
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "email": [
                    "The email field is required."
                ],
                "password": [
                    "The password field is required."
                ]
            }
        }
        
+ Response 500 (application/json)

        {
            "message" : "Oops! Some error occurred in the server"
        }
        
### Refresh API [POST /api/refresh]

+ Request (application/json)

    + Headers
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9


+ Response (application/json)

    + Headers
            access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            refresh_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9

### Logout [POST /api/logout]

Send a logout request to the server with the token

+ Request (application/json)

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json



+ Response 200 (application/json)

        {
            "message": "Successfully logged out"
        }

+ Response 400 (application/json)

        {
            "message": "Token is Invalid"
        }

+ Response 400 (application/json)

            {
                "message": "Token is Expired"
            }
            
+ Response 500 (application/json)

        {
            "message": "Authorisation token not found"
        }



## Table API [/api/tables/{id}]

### List All Tables [GET/api/tables]

To list all the tables.


+ Request (application/json)

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

         [
            {
                "id": 40,
                "table_name": "A1"
            },
            {
                "id": 7,
                "table_name": "1"
            },
            {
                "id": 8,
                "table_name": "2"
            },
            {
                "id": 9,
                "table_name": "3"
            },
            {
                "id": 10,
                "table_name": "4"
            },
            {
                "id": 38,
                "table_name": "5"
            },
            {
                "id": 39,
                "table_name": "11"
            }
        ]

+ Response 500 (application/json)

        {
         
            "message": "Some error occurred while retrieving table from database."
        }
        
### Get a particular table [GET/api/tables/{id}]

+ Parameters
   + id (required)
   
To retrieve a particular table

+ Request (application/json)

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)


        {
            "id": 12,
            "table_name": "1"
        }
        

+ Response 404 (application/json)

        {
            "message": "You are trying to access a table not in database."
        }
    

+ Response 500 (application/json)

        {

            "message": "Some error occurred while retrieving table from database."
        }
      
### Create a new Table [POST/api/tables]

We can also create a new table. It takes a JSON response and returns all tables as response.

+ Request 
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

            {
                "name" : "6"
            }

+ Response 200 (application/json)

        [
            {
                "id": 40,
                "table_name": "A1"
            },
            {
                "id": 7,
                "table_name": "1"
            },
            {
                "id": 8,
                "table_name": "2"
            },
            {
                "id": 9,
                "table_name": "3"
            },
            {
                "id": 10,
                "table_name": "4"
            },
            {
                "id": 38,
                "table_name": "5"
            },
            {
                "id": 39,
                "table_name": "11"
            },
            {
                "id": 47,
                "table_name": "12"
            }
        ]
    
+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name field is required."
                ]
            }
        }
    
+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name has already been taken."
                ]
            }
        }
        
+ Response 500 (application/json)

        {
            "message": "Some error occurred while creating table."
        }
        
        
### Delete a Table [DELETE/api/tables/{id}]

Delete  a particular table name;

+ Parameters
   + id (required)
   
+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

         [
            {
                "id": 40,
                "table_name": "A1"
            },
            {
                "id": 7,
                "table_name": "1"
            },
            {
                "id": 8,
                "table_name": "2"
            },
            {
                "id": 9,
                "table_name": "3"
            },
            {
                "id": 10,
                "table_name": "4"
            },
            {
                "id": 38,
                "table_name": "5"
            },
            {
                "id": 47,
                "table_name": "12"
            }
        ]
    
+ Response 404 (application/json)

        {
            "message": "You are trying to access menu not in database."
        }
     
+ Response 500 (application/json)

        {
            "message": "Some error occurred while updating menu."
        }
        
## Menu API [/api/menus/{id}]

### Get Menu Filters [GET /api/menus/filters]

To get filters for menus

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

        {
            "type": [
                {
                    "id": 7,
                    "name": "Veg"
                },
                {
                    "id": 14,
                    "name": "Non veg"
                }
            ],
            "category": [
                {
                    "id": 12,
                    "name": "Dosa"
                },
                {
                    "id": 40,
                    "name": "Briyani"
                },
                {
                    "id": 41,
                    "name": "Soup"
                }
            ]
        }
        
### List All Menus [GET/api/menus]

To list all the menus.

`with_menu_timings`, `type` and `category` are optional filters for menu.

`with_menu_timings` - Only shows the menus which is applicable for that time. Use in take order screen.  
`type` - Used to filter the menus with type  
`catgory` - Used to filter the menus with category


+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json
            
    + Body 
        
        {
            "with_menu_timings": "false",
            "type" : 5,
            "categroy" : 6,
        }


+ Response 200 (application/json)

        [
            {
                "id": 76,
                "food_name": "Chicken Sweet Corn Soup",
                "category": {
                    "id": 41,
                    "name": "Soup"
                },
                "description": null,
                "type": {
                    "id": 14,
                    "name": "Non veg"
                },
                "status": false,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": true,
                    "afternoon": true
                },
                "price": 100
            },
            {
                "id": 17,
                "food_name": "Dosa",
                "category": {
                    "id": 12,
                    "name": "Dosa"
                },
                "description": null,
                "type": {
                    "id": 7,
                    "name": "Veg"
                },
                "status": false,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": true
                },
                "price": 40
            },
            {
                "id": 74,
                "food_name": "Gowtham",
                "category": {
                    "id": 12,
                    "name": "Dosa"
                },
                "description": null,
                "type": {
                    "id": 7,
                    "name": "Veg"
                },
                "status": false,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": true
                },
                "price": 50
            },
            {
                "id": 75,
                "food_name": "Special Chicken Briyani",
                "category": {
                    "id": 40,
                    "name": "Briyani"
                },
                "description": null,
                "type": {
                    "id": 14,
                    "name": "Non veg"
                },
                "status": false,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": true,
                    "afternoon": false
                },
                "price": 200
            },
            {
                "id": 77,
                "food_name": "Veg sweet corn soup",
                "category": {
                    "id": 41,
                    "name": "Soup"
                },
                "description": null,
                "type": {
                    "id": 7,
                    "name": "Veg"
                },
                "status": false,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": true,
                    "afternoon": true
                },
                "price": 50
            },
            {
                "id": 18,
                "food_name": "yvygu",
                "category": {
                    "id": 12,
                    "name": "Dosa"
                },
                "description": null,
                "type": {
                    "id": 7,
                    "name": "Veg"
                },
                "status": false,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": true
                },
                "price": 90
            }
        ]
                
+ Response 500 (application/json)

        {
            "message": "You are trying to access a table not in database."
        }
        
### Get a particular menu [GET/id/api/menus/{id}]

+ Parameters
   + id (required) - Id of the menu
   
To retrieve a particular menu

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

            {
                "id": 18,
                "food_name": "yvygu",
                "category": {
                    "id": 12,
                    "name": "Dosa"
                },
                "description": null,
                "type": {
                    "id": 7,
                    "name": "Veg"
                },
                "status": false,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": true
                },
                "price": 90
            } 


+ Response 404 (application/json)

        {
            "message": "You are trying to access a menu not in database."
        }
    

+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
 
### Create a new Menu [POST/api/menus]


We can also create a new table. It takes a JSON response and returns all tables as response.

+ Request 

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

            {
                "image": "multipart image upload",
                "name" : "fefj",
                "price" : 34,
                "status" : true,
                "time_of_day" : {"night" : true,"morning" : true,"evening" : true,"afternoon" : false},
                "category_id" : "1",
                "category_name" : "",
                "type_id" : "1",
                "type_name" : "",
                "description" : "test"
            }

+ Response 200 (application/json)

        [
            {
                "id": 4,
                "food_name": "Chicken Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 2,
                    "name": "Non Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": false,
                    "evening": true,
                    "morning": true,
                    "afternoon": false
                },
                "price": 30
            },
            {
                "id": 3,
                "food_name": "Ghee Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": false,
                    "afternoon": true
                },
                "price": 30
            },
            {
                "id": 2,
                "food_name": "Masala Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": false,
                    "morning": true,
                    "afternoon": false
                },
                "price": 30
            },
            {
                "id": 6,
                "food_name": "fefj",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "test",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": false
                },
                "price": 34
            }
        ]
        
+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name field is required."
                ],
                "category": [
                    "The category field is required."
                ],
                "price": [
                    "The price field is required."
                ]
            }
        }
    

+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name has already been taken."
                ]
            }
        }


+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "image": [
                    "The image must be an image."
                ]
            }
        }

+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
 

### Update a Menu [PUT/api/menus/{id}]

We can also create a new menu. It takes a JSON response and returns all menus as response.

+ Parameters
   + id (required) - Id of the menu
   
+ Request 

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

            {
                "name" : "fefj",
                "price" : 34,
                "status" : true,
                "time_of_day" : {"night" : true,"morning" : true,"evening" : true,"afternoon" : false},
                "category_id" : "1",
                "category_name" : "",
                "type_id" : "1",
                "type_name" : "",
                "description" : "test"
            }

+ Response 200 (application/json)

          [
            {
                "id": 4,
                "food_name": "Chicken Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 2,
                    "name": "Non Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": false,
                    "evening": true,
                    "morning": true,
                    "afternoon": false
                },
                "price": 30
            },
            {
                "id": 3,
                "food_name": "Ghee Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": false,
                    "afternoon": true
                },
                "price": 30
            },
            {
                "id": 2,
                "food_name": "Masala Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": false,
                    "morning": true,
                    "afternoon": false
                },
                "price": 30
            },
            {
                "id": 6,
                "food_name": "fefj",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "test",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": false
                },
                "price": 34
            }
        ]
        
+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name field is required."
                ]
            }
        }
    
+ Response 422 (application/json)

        {
            "message": "Validation failed",
            "errors": {
                "name": [
                    "The name has already been taken."
                ]
            }
        }
   
+ Response 404 (application/json)

        {
            "message": "You are trying to access menu not in database."
        }
        
+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
 
            
### Delete a Menu [DELETE/api/menu/{id}]

To delete a menu.

+ Parameters
   + id (required) - Id of the menu
   
+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

        [
            {
                "id": 3,
                "food_name": "Ghee Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": false,
                    "evening": false,
                    "morning": false,
                    "afternoon": true
                },
                "price": 30
            },
            {
                "id": 2,
                "food_name": "Masala Dosa",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "Description",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": false,
                    "morning": true,
                    "afternoon": false
                },
                "price": 30
            },
            {
                "id": 6,
                "food_name": "fefj",
                "category": {
                    "id": 1,
                    "name": "Dosa"
                },
                "description": "test",
                "type": {
                    "id": 1,
                    "name": "Veg"
                },
                "status": true,
                "time_of_day": {
                    "night": true,
                    "evening": true,
                    "morning": true,
                    "afternoon": false
                },
                "price": 34
            }
        ]
    
+ Response 404 (application/json)

        {
            "message": "You are trying to access a table not in database."
        }

+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
        
        
## Pending Order API [/api/pending-orders/{order-name}/tables/{table-name}]

### Pending Orders List[GET/api/pending-orders]

To list all the pending orders with filter


+ Request

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

                {
                    "date" : "07-03-2020"
                }
                
+ Response 200 (application/json)

        [
            {
                "id": 57,
                "table_name": "1",
                "order_name": "gowtham",
                "order": "[{\"price\": 40.0, \"item_id\": 17, \"type_id\": 7, \"quantity\": 1, \"item_name\": \"Dosa\", \"category_id\": 12}, {\"price\": 50.0, \"item_id\": 74, \"type_id\": 7, \"quantity\": 3, \"item_name\": \"Gowtham\", \"category_id\": 12}, {\"price\": 200.0, \"item_id\": 75, \"type_id\": 14, \"quantity\": 4, \"item_name\": \"Special Chicken Briyani\", \"category_id\": 40}]",
                "status": "pending",
                "date": "21-03-2020",
                "time": "03-44 PM"
            },
            {
                "id": 56,
                "table_name": "1",
                "order_name": "gowtham",
                "order": "[{\"price\": 40.0, \"item_id\": 17, \"type_id\": 7, \"quantity\": 1, \"item_name\": \"Dosa\", \"category_id\": 12}, {\"price\": 50.0, \"item_id\": 74, \"type_id\": 7, \"quantity\": 3, \"item_name\": \"Gowtham\", \"category_id\": 12}, {\"price\": 200.0, \"item_id\": 75, \"type_id\": 14, \"quantity\": 4, \"item_name\": \"Special Chicken Briyani\", \"category_id\": 40}]",
                "status": "pending",
                "date": "21-03-2020",
                "time": "03-44 PM"
            }
        ]
                        
+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving pending orders from database."
        }
        

### Get all pending order names [GET /api/pending-order/get-all-names/]

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200(application/json)

        [
            "tedt",
            "full"
        ]
        
### Create a new Pending Order [POST /api/pending-orders]


We can also create a new table. It takes a JSON response and returns all tables as response.

+ Request

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json


+ Body

            {
                "table_name": "1"
                "order_name": "gowtham"
                "order": [
                        {
                            "item_id":2,
                            "quantity":2,
                            "price": 30,
                            "item_name": "Plain Dosa"
                        }
                    ]    
            }

+ Response 200 (application/json)

        {
           "message": "Order created successfully."
        }
        
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "table_name": [
                    "The table name field is required."
                ],
                "order_name": [
                    "The order name field is required."
                ],
                "order": [
                    "The order field is required."
                ]
            }
        }       
    

+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
 

### Delete a PendingOrder [DELETE/api/pending-orders]

To delete a order from a particular table. `table_name` and `order_name` are optional fields in request. They are used as filters to delete the pending orders.  

+ Request (application/json)

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json
            
    + Body

                {
                    "table_name" : 1,
                    "order_name" : "test",
                }
            
+ Response 200 (application/json)

        {
            "message": "Order deleted successfully."
        }
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "order_name": [
                    "Order not found in the database. Provide a valid Order name."
                ],
            }
        }

+ Response 500 (application/json)

        {
            "message": "Some error occurred while deleting order from database."
        }

## Order API [/api/orders]


### List All Orders [GET/api/orders]

To list all the orders.

+ Request (application/json)

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

                {
                    "date" : "02-07-18"
                }
        

+ Response 200 (application/json)

      [
            {
                "id": 1,
                "bill_no": "1",
                "date": "02-07-2018",
                "time": "01-37 PM",
                "discount": 15,
                "amount": null,
                "total": 232,
                "order": "[{\"cat_id\": 1, \"item_id\": 2, \"type_id\": 1, \"quantity\": 2}, {\"cat_id\": 1, \"item_id\": 4, \"type_id\": 2, \"quantity\": 2}]"
            },
            {
                "id": 2,
                "bill_no": "2",
                "date": "02-07-2018",
                "time": "01-37 PM",
                "discount": 17,
                "amount": null,
                "total": 692,
                "order": "[{\"cat_id\": 1, \"item_id\": 3, \"type_id\": 1, \"quantity\": 3}, {\"cat_id\": 1, \"item_id\": 3, \"type_id\": 2, \"quantity\": 5}]"
            },
        ]
                
+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving orders from database."
        }
        

### Create a new Order [POST/api/orders]


We can also create a new order. It takes a JSON response and returns all tables as response.

+ Request 

    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json
            
    + Body

            {
                "order": [
                    {
                        "item_name":"Mutton Biryani",
                        "item_id": 1,
                        "category_id" : 1,
                        "type_id" : 1,
                        "price":"120",
                        "quantity":1
                    },
                ],
                "sub_total": 500
                "total":550
                "discount":50
            }

+ Response 200 (application/json)

        {
            "message": Order created successfully.
        }

                

+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "order": [
                    "The order field is required."
                ],
                "amount": [
                    "The sub_total field is required."
                ],
                "total": [
                    "The total field is required."
                ],
                "discount": [
                    "The discount field is required."
                ]
            }
        }      

+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving menu from database."
        }
 

## Report API [/api/reports]

### SalesReport [GET/api/reports/daily/sales-report]


We can also create a new order. It takes a JSON response and returns all tables as response.

+ Request 
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Body

            {
                "date": 27-10-2019
            }

+ Response 200 (application/json)

        {
            "order_details": [
                {
                    "id": 1,
                    "bill_no": "1",
                    "date": "31-05-2017",
                    "time": "06-02 AM",
                    "discount": 9,
]                    "sub_total": 224,
                    "total": 215,
                    "order": "[{\"cat_id\": 1, \"item_id\": 1, \"type_id\": 2, \"quantity\": 3}]"
                },
                {
                    "id": 2,
                    "bill_no": "2",
                    "date": "31-05-2017",
                    "time": "06-02 AM",
                    "discount": 8,
                    "sub_total": 586,
                    "total": 578,
                    "order": "[{\"cat_id\": 1, \"item_id\": 1, \"type_id\": 1, \"quantity\": 6}]"
                },
            ],
            "items_count": {
                "Plain Dosa": "9",
                "Masala Dosa": "13",
                "Ghee Dosa": "14",
                "Chicken Dosa": "4"
            },
            "category_count": {
                "Dosa": "40"
            },
            "type_details": {
                "Veg": "22",
                "Non Veg": "18"
            }
        }
                

                
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "date": [
                    "The date field is required."
                ]
            }
        }
        
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "date": [
                    "The date does not match the format d-m-Y.",
                    [
                        "Date should not be greater than today"
                    ]
                ]
            }
        }
        
        
+ Response 500 (application/json)

        {
            "message": "Some error occurred while retrieving items report from database."
        }
        
## Feedback API [/api/admin-feedback]

### Feedback API [POST]

+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

    + Body

            {
                "type" : "issue",
                "title" : "test",
                "description" : test"
            }
        
+ Response 200 (application/json)

        {
            "message" : "Feedback submitted successgully"
        }
        
## Settings API [/api/settings]

### Get Menu Settings [GET /api/settings/menu]

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9teXdlYmFwcC50ZXN0XC9hcGlcL2xvZ2luIiwiaWF0IjoxNTY3MTQ2NzIzLCJleHAiOjE1NjcxNTAzMjMsIm5iZiI6MTU2NzE0NjcyMywianRpIjoiREpwc1NxakRCeTZyQllidiIsInN1YiI6MSwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.CFHxoso490eMWt3-FCW3ZqljD9_7ddAPWEoOhEuAkq4
            Content-Type: application/json
            Accept: application/json

+ Response 200 (application/json)

        {
            "apply": true,
            "morning": {
                "from": "07:00 AM",
                "to": "08:00 AM"
            },
            "afternoon": {
                "from": "11:55 AM",
                "to": "03:30 PM"
            },
            "evening": {
                "from": "05:00 PM",
                "to": "06:00 PM"
            },
            "night": {
                "from": "07:00 PM",
                "to": "11:00 PM"
            }
        }
        
### Update Menu Settings [POST /api/settings/menu]

+ Request 

            {
                "apply": true,
                "morning": {
                    "from": "06:00 AM",
                    "to": "08:00 AM"
                },
                "afternoon": {
                    "from": "12:01 PM",
                    "to": "03:30 PM"
                },
                "evening": {
                    "from": "05:00 PM",
                    "to": "06:00 PM"
                },
                "night": {
                    "from": "07:00 PM",
                    "to": "10:00 PM"
                }
            }

+ Response 200 (application/json)

        {
            "message": "Menu settings updated successfully."
        }
        
## Mealee Landing Page [/api/]

### Contact [POST /api/website-contact]

+ Request 

            {
                "name": "xyz",
                "email": "zyz@gmail.com"
                "subject": "test",
                "message": "test"
            }
    
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "name": [
                    "The name field is required."
                ],
                "email": [
                    "The email field is required."
                ],
                "message": [
                    "The message field is required."
                ]
            }
        }

+ Response 200 (application/json)

        {
            "message": "Contact form submitted successfully."
        }
        

### Contact [POST /api/website-subscribe]

+ Request 

            {
                "email": "zyz@gmail.com"
            }
    
+ Response 422 (application/json)

        {
            "message": "The given data was invalid.",
            "errors": {
                "email": [
                    "The email field is required."
                ]
            }
        }

+ Response 200 (application/json)

        {
            "message": "Email subscription successfull."
        }